import com.google.gdata.util.ServiceException;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileFilter;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;

import subidadearchivoslite.*;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author CS SPARE
 */
public class updatingLITE extends javax.swing.JFrame  {

    /**
     * Creates new form updatingLITE2
     */
    
 
    public updatingLITE() {
        initComponents();
        this.setResizable(false); //Pongo esto para que no sea ampliado el tamanho
        this.setLocationRelativeTo(null); //esto sirve para centrar la ventana
        this.setTitle("Loader - GDrive");
        this.bandera.setIcon(new javax.swing.ImageIcon(getClass().getResource("UK.jpg")));
        this.BotonActualizar.setToolTipText("Hit the button to load the file!!!");
        
        
        
       
        
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        bandera = new javax.swing.JLabel();
        BotonActualizar = new javax.swing.JButton();
        jComboBox_supplier = new javax.swing.JComboBox();
        jComboBox_itguy = new javax.swing.JComboBox();

        fileChooser.setName(""); // NOI18N
        fileChooser.setRequestFocusEnabled(false);
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rarelogo.jpg"))); // NOI18N

        bandera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UK.jpg"))); // NOI18N

        BotonActualizar.setText("Load File!");
        BotonActualizar.setToolTipText("");
        BotonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonActualizarActionPerformed(evt);
            }
        });

        jComboBox_supplier.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SUPPLIER", "!CLEARANCE!", "2ENTERTAIN", "AHE", "ANCHOR BAY", "AVANQUEST", "AVID", "BERTUS", "BRAVADO", "CAMROSE MEDIA", "CENTRESOFT", "CHANNEL4", "CONTACT", "CORNERSTONE", "CREATIVE", "CURVEBALL", "DADC", "DELTA", "DISCOVERY", "DUKE", "E1", "ELEVATION", "FIREBOX", "FOX", "FREEMANTLE", "GAME OUTLET", "GARDNERS_DVD", "GEM GAMES", "HART", "HIGHFLYER", "HIT", "HFF", "ITV", "KOCH MEDIA", "KONDOR", "LASGO", "LINK", "MASTERTRONIC", "MYSTORM", "MERONCOURT", "MOV", "MSE WS", "PARAMOUNT", "PIAS", "PICKWICK", "PLASTICHEAD", "PROPER", "QUANTUM LEAP", "RARE_ON_DEMAND", "ROM", "SELECT MUSIC", "SONY MUSIC", "PAVILION", "SPICERS", "SPACE1999", "SPIKE", "UNION SQUARE MUSIC", "UNIVERSAL", "UNIVERSAL PICTURES", "UPFRONT", "WALK", "WARNER", "WARNER C&J", "WARNER HOME ENT", "WDL", "PROPER WS", "GEM OP", "TBS", "ROCKOFF", "B&T", "INGRAM", "UNIVERSAL-USA", "E1-USA", "VPD", "AEC", "ALLIED VAUGHN", "ISOTOPE", "MVD", "ALLEGRO", "BERTUS-USA", "CDBABY", "AMS", "HARMONIAMUNDI" }));
        jComboBox_supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_supplierActionPerformed(evt);
            }
        });

        jComboBox_itguy.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "IT Team", "T0M", "Sebas" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonActualizar)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox_supplier, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox_itguy, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bandera)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bandera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox_itguy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox_supplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BotonActualizar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonActualizarActionPerformed
        // TODO add your handling code here:
       
        //------------------------------------------
        
        this.fileChooserActionPerformed(evt);
        //------------------------------------------
        

    }//GEN-LAST:event_BotonActualizarActionPerformed

    
    //ESTO ES PARA QUE LA BANDERITA SE VAYA ACTUALIZANDO .... 
    private void jComboBox_supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_supplierActionPerformed
        // TODO add your handling code here:

        ArrayList<String> listado_logUSA = new ArrayList<String>();
        listado_logUSA.add("B&T");
        listado_logUSA.add("INGRAM");
        listado_logUSA.add("UNIVERSAL-USA");
        listado_logUSA.add("E1-USA");
        listado_logUSA.add("VPD");
        listado_logUSA.add("AEC");
        listado_logUSA.add("ALLIED VAUGHN");
        listado_logUSA.add("ISOTOPE");
        listado_logUSA.add("MVD");
        listado_logUSA.add("ALLEGRO");
        listado_logUSA.add("BERTUS-USA");
        listado_logUSA.add("CDBABY");
        listado_logUSA.add("AMS");
        listado_logUSA.add("HARMONIAMUNDI");

        Boolean UK = true;
        String spreadsheetRarewaves = "UK UPDATE LIST";

        if(listado_logUSA.contains( this.jComboBox_supplier.getSelectedItem().toString()  )) { this.bandera.setIcon(new javax.swing.ImageIcon(getClass().getResource("USA.jpg")));}
        else this.bandera.setIcon(new javax.swing.ImageIcon(getClass().getResource("UK.jpg")));
    }//GEN-LAST:event_jComboBox_supplierActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
        
        
        
        
        
        
        String valor = this.jComboBox_supplier.getSelectedItem().toString();

        //************************************************************************
        //************************************************************************
        //UK O USA?
        /*B&T
        INGRAM
        UNIVERSAL-USA
        E1-USA
        VPD
        AEC
        ALLIED VAUGHN
        ISOTOPE*
        MVD
        ALLEGRO
        BERTUS-USA
        */
        
 

        ArrayList<String> listado_logUSA = new ArrayList<String>();
        listado_logUSA.add("B&T");
        listado_logUSA.add("INGRAM");
        listado_logUSA.add("UNIVERSAL-USA");
        listado_logUSA.add("E1-USA");
        listado_logUSA.add("VPD");
        listado_logUSA.add("AEC");
        listado_logUSA.add("ALLIED VAUGHN");
        listado_logUSA.add("ISOTOPE");
        listado_logUSA.add("MVD");
        listado_logUSA.add("ALLEGRO");
        listado_logUSA.add("BERTUS-USA");
        listado_logUSA.add("CDBABY");
        listado_logUSA.add("AMS");
        listado_logUSA.add("HARMONIAMUNDI");

        Boolean UK = true;
        String spreadsheetRarewaves = "UK UPDATE LIST";

        if(listado_logUSA.contains(valor)) {spreadsheetRarewaves = "RWUSA Stock Updates"; UK = false; }

        //************************************************************************
        //************************************************************************
        
        if(!valor.equals("SUPPLIER"))
        {
         //**************************************************************************************
            
            
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files (97-2003 *.xls / *.xlsx) ", new String[] { "XLS", "XLSX" });              
            fileChooser.setFileFilter(filter);
            this.fileChooser.setApproveButtonText("Upload file...");
            this.fileChooser.setDialogTitle("Uploading window | Sebastian 2014");
            //fileChooser.addChoosableFileFilter(filter);
            
            //this.fileChooser.setAcceptAllFileFilterUsed(false);
             
              //Aqui voy a hacer que el archivo se abra en Z directamente... o en el sitio en el que se encuentre el archivo
              //this.fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));   
            
             //this.fileChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
           // this.fileChooser.setCurrentDirectory(new File(".."));
            //DEPENDIENDO DEL PROVEEDOR PUES ME METERE EN LA CARPETA DIRECTAMENTE...
            if(UK) this.fileChooser.setCurrentDirectory(new File("../"+this.jComboBox_supplier.getSelectedItem().toString()));
            else this.fileChooser.setCurrentDirectory(new File("\\\\NetworkSpace2\\OpenShare\\RAREWAVESUSA\\STOCK FILE CONVERTERS\\"+this.jComboBox_supplier.getSelectedItem().toString()));
              //----------------------------------------------------

              //NUEVO SOLO QUIERO QUE MUESTRE ARCHIVOS!!!
              fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
              //NUEVO SOLO QUIERO QUE MUESTRE ARCHIVOS!!!
              int returnVal = fileChooser.showOpenDialog(this);
                //System.out.println("Entro aqui: "+returnVal);


              if (returnVal == JFileChooser.APPROVE_OPTION) {
                  
                      File file = fileChooser.getSelectedFile();
                      
                      fileChooser.setCurrentDirectory(file);
                      // What to do with the file, e.g. display it in a TextArea
                      // What to do with the file, e.g. display it in a TextArea

                      //*************************************************



                      //------------------------------------------

                      GoogleDriveUPD probando = new GoogleDriveUPD(file.getAbsolutePath(),file.getName()); //NOMBRE DEL FICHERO, NOMBRE DE LA HOJA DE CALCULO
                       
                      
                          
                          
                          try 
                          {
                              probando.actualizacionGDrive(this.jComboBox_supplier.getSelectedItem().toString(), spreadsheetRarewaves, this.jComboBox_itguy.getSelectedItem().toString(), spreadsheetRarewaves, UK); //------------------------------------------
                              //------------------------------------------
                              JOptionPane.showMessageDialog(this, "The file was sent Successfully!",
                "Success!", JOptionPane.INFORMATION_MESSAGE);                              
                              
                              
                          }
                          catch (IOException ex) 
                          {
                              Logger.getLogger(updatingLITE.class.getName()).log(Level.SEVERE, null, ex);
                              JOptionPane.showMessageDialog(this, "Oops! Something gone wrong while saving." + ex.getMessage(),
                "Error!", JOptionPane.ERROR_MESSAGE);
                          }
                           catch (ServiceException ex)
                           {                               
                             Logger.getLogger(updatingLITE.class.getName()).log(Level.SEVERE, null, ex);
                           }
                          
                          
                     
                    


                     
                 
              } 
              else 
              {
                  System.out.println("File access cancelled by user.");
                  //JOptionPane.showMessageDialog(this, "File access cancelled by the user!");
              }   
         //**************************************************************************************
        }
        else System.out.println("SELECCIONA ALGO PISHAA!!!!");     
        
        
        
        
        
        
   
        
        
        
        
    }//GEN-LAST:event_fileChooserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updatingLITE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updatingLITE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updatingLITE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updatingLITE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updatingLITE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonActualizar;
    private javax.swing.JLabel bandera;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JComboBox jComboBox_itguy;
    private javax.swing.JComboBox jComboBox_supplier;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
